{"version":3,"sources":["../../src/test/index.test.js"],"names":["describe","it","ipfsMultiplexer","IpfsMultiplexer","response","get","Array","isArray","to","be","true","length","equal","content","toString","timeout","err","message","skip","add","path","Buffer","from","wrapInDirectory","eql","hash","size","ls","name","type","depth"],"mappings":"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","sourcesContent":["import { expect } from 'chai';\n\nimport IpfsMultiplexer from '../index';\n\ndescribe('Describe IpfsMultiplexer', () => {\n  it('should correctly get a file', async () => {\n    const ipfsMultiplexer = new IpfsMultiplexer();\n    const response = await ipfsMultiplexer.get('QmZtmD2qt6fJot32nabSP3CUjicnypEBz7bHVDhPQt9aAy');\n    expect(Array.isArray(response)).to.be.true;\n    expect(response.length).to.equal(1);\n    expect(response[0].content.toString('utf8')).to.equal('version 1 of my text\\n');\n  });\n\n  it('should throw an error with an invalid file', async () => {\n    const ipfsMultiplexer = new IpfsMultiplexer({\n      timeout: 5000,\n    });\n    try {\n      await ipfsMultiplexer.get('QmZtmD2qt6fJot32nabSP3CUjicnypEBz7bHVDhPQt9aAz');\n    } catch (err) {\n      expect(err.message).to.equal('The requests from all nodes failed');\n    }\n  });\n\n  it.skip('should correctly save array of files and wrap them in directory', async () => {\n    const ipfsMultiplexer = new IpfsMultiplexer({\n      timeout: 5000,\n    });\n    const response = await ipfsMultiplexer.add(\n      [\n        { path: 'file-1', content: Buffer.from('hello 1') },\n        { path: 'file-2', content: Buffer.from('hello 2') },\n        { path: 'file-3', content: Buffer.from('hello 3') },\n      ],\n      { wrapInDirectory: true }\n    );\n    expect(response).to.eql([\n      {\n        path: 'file-1',\n        hash: 'QmYU2WZfhRAhz7z5xekJkAZWznK2k27uyiH7KZct6VdCbe',\n        size: 15,\n      },\n      {\n        path: 'file-2',\n        hash: 'QmYNmWVijaKZAbse8vJDrUiBk6CrksRUHepy2e14DaL4fW',\n        size: 15,\n      },\n      {\n        path: 'file-3',\n        hash: 'QmT6Y6kJSpMs8hG9tD685sFtLegkddXxydL9tzZuyV6Dc3',\n        size: 15,\n      },\n      {\n        path: '',\n        hash: 'QmSTaWhi6xW2L1mUprRvtw22UXFCPyzZx5d1cmwMBa1bu4',\n        size: 193,\n      },\n    ]);\n  });\n\n  it('should correctly list files in directory', async () => {\n    const ipfsMultiplexer = new IpfsMultiplexer({\n      timeout: 5000,\n    });\n    const response = await ipfsMultiplexer.ls('QmSTaWhi6xW2L1mUprRvtw22UXFCPyzZx5d1cmwMBa1bu4');\n    expect(response).to.eql([\n      {\n        name: 'file-1',\n        path: 'QmSTaWhi6xW2L1mUprRvtw22UXFCPyzZx5d1cmwMBa1bu4/file-1',\n        size: 7,\n        hash: 'QmYU2WZfhRAhz7z5xekJkAZWznK2k27uyiH7KZct6VdCbe',\n        type: 'file',\n        depth: 1,\n      },\n      {\n        name: 'file-2',\n        path: 'QmSTaWhi6xW2L1mUprRvtw22UXFCPyzZx5d1cmwMBa1bu4/file-2',\n        size: 7,\n        hash: 'QmYNmWVijaKZAbse8vJDrUiBk6CrksRUHepy2e14DaL4fW',\n        type: 'file',\n        depth: 1,\n      },\n      {\n        name: 'file-3',\n        path: 'QmSTaWhi6xW2L1mUprRvtw22UXFCPyzZx5d1cmwMBa1bu4/file-3',\n        size: 7,\n        hash: 'QmT6Y6kJSpMs8hG9tD685sFtLegkddXxydL9tzZuyV6Dc3',\n        type: 'file',\n        depth: 1,\n      },\n    ]);\n  });\n});\n"],"file":"index.test.js"}